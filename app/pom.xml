<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <!-- Parent POM for Spring Boot projects. This brings in dependency management and default configurations. -->
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>3.2.5</version> <!-- Using a recent stable Spring Boot version -->
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <!-- Project specific information -->
    <groupId>com.project</groupId>
    <artifactId>back_end</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>smart-clinic-backend</name>
    <description>Backend for Smart Clinic Management System</description>

    <!-- Properties section for common configurations like Java version and encoding -->
    <properties>
        <java.version>17</java.version> <!-- Using Java 17, a common LTS version -->
    </properties>

    <!-- Dependencies required for the project -->
    <dependencies>
        <!-- Spring Boot Starter Web: Includes Tomcat and Spring MVC for building web applications, including RESTful services. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-web</artifactId>
        </dependency>

        <!-- Spring Boot Starter Data JPA: Provides quick setup for JPA with Hibernate, for relational databases like MySQL. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-jpa</artifactId>
        </dependency>

        <!-- MySQL Connector/J: JDBC driver for connecting to MySQL database. -->
        <dependency>
            <groupId>com.mysql</groupId>
            <artifactId>mysql-connector-j</artifactId>
            <scope>runtime</scope>
        </dependency>

        <!-- Spring Boot Starter Data MongoDB: Provides auto-configuration for Spring Data MongoDB. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-data-mongodb</artifactId>
        </dependency>

        <!-- Spring Boot Starter Validation: Adds support for Bean Validation API (jakarta.validation) for input validation. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-validation</artifactId>
        </dependency>

        <!-- Spring Boot Starter Thymeleaf: Provides Thymeleaf integration for server-side HTML templating. -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-thymeleaf</artifactId>
        </dependency>

        <!-- JJWT (Java JWT) API: Core JWT functionalities -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-api</artifactId>
            <version>0.11.5</version> <!-- A compatible version -->
        </dependency>
        <!-- JJWT Implementation: Runtime implementation (e.g., for parsing and signing) -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-impl</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>
        <!-- JJWT Jackson: JSON processing for JWT (needed for JSON parsing) -->
        <dependency>
            <groupId>io.jsonwebtoken</groupId>
            <artifactId>jjwt-jackson</artifactId>
            <version>0.11.5</version>
            <scope>runtime</scope>
        </dependency>


        <!-- Lombok: A library that automatically plugs into your build process to generate boilerplate code (getters, setters, constructors).
             It's 'provided' scope because it's only needed during compilation, not at runtime. -->
        <dependency>
            <groupId>org.projectlombok</groupId>
            <artifactId>lombok</artifactId>
            <optional>true</optional>
        </dependency>

        <!-- Spring Boot Starter Test: Provides dependencies for testing Spring Boot applications (JUnit, Mockito, Spring Test). -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <!-- Build section: Defines how the project is built, including plugins -->
    <build>
        <plugins>
            <!-- Spring Boot Maven Plugin: Helps in packaging the application into an executable JAR. -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
                <configuration>
                    <!-- Excludes Lombok from the final JAR if it's not needed at runtime, though usually not an issue. -->
                    <excludes>
                        <exclude>
                            <groupId>org.projectlombok</groupId>
                            <artifactId>lombok</artifactId>
                        </exclude>
                    </excludes>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
