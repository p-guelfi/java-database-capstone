package com.project.back_end.models;

import org.springframework.data.annotation.Id;
import org.springframework.data.mongodb.core.mapping.Document;
import jakarta.validation.constraints.NotNull;
import jakarta.validation.constraints.Size;

/**
 * Represents a medical prescription stored as a document in MongoDB.
 * This model captures medication details, dosage, and links to the patient and appointment.
 */
@Document(collection = "prescriptions") // Maps this class to the 'prescriptions' collection in MongoDB.
public class Prescription {

    @Id // Designates 'id' as the primary key field for MongoDB (_id).
    private String id; // Unique identifier for the prescription, auto-generated by MongoDB.

    @NotNull(message = "Patient name cannot be null") // Ensures the patient name is provided.
    @Size(min = 3, max = 100, message = "Patient name must be between 3 and 100 characters") // Validates patient name length.
    private String patientName; // Full name of the patient for whom the prescription is issued.

    @NotNull(message = "Appointment ID cannot be null") // Ensures the linked appointment ID is provided.
    private Long appointmentId; // Reference to the ID of the Appointment entity (from MySQL).

    // Note: The original request had a single 'medication' field.
    // However, the Schema Design mentioned 'medications' as an array of objects.
    // For simplicity as per the current request's attributes, I'll keep it as a single string field.
    // If a more complex structure (e.g., an array of Medication objects) is needed, this can be updated.
    @NotNull(message = "Medication name cannot be null") // Ensures medication name is provided.
    @Size(min = 3, max = 100, message = "Medication name must be between 3 and 100 characters") // Validates medication name length.
    private String medication; // Name of the prescribed medication.

    @NotNull(message = "Dosage details cannot be null") // Ensures dosage is provided.
    @Size(min = 3, max = 20, message = "Dosage must be between 3 and 20 characters") // Validates dosage length.
    private String dosage; // Details of the medication dosage (e.g., "500mg").

    @Size(max = 200, message = "Doctor notes cannot exceed 200 characters") // Validates doctor notes length.
    private String doctorNotes; // Optional notes from the doctor regarding the prescription.

    // Default constructor (required by Spring Data MongoDB)
    public Prescription() {
    }

    // Constructor to easily create new Prescription instances with required fields.
    public Prescription(String patientName, Long appointmentId, String medication, String dosage, String doctorNotes) {
        this.patientName = patientName;
        this.appointmentId = appointmentId;
        this.medication = medication;
        this.dosage = dosage;
        this.doctorNotes = doctorNotes;
    }

    // --- Getters and Setters for all attributes ---

    public String getId() {
        return id;
    }

    public void setId(String id) {
        this.id = id;
    }

    public String getPatientName() {
        return patientName;
    }

    public void setPatientName(String patientName) {
        this.patientName = patientName;
    }

    public Long getAppointmentId() {
        return appointmentId;
    }

    public void setAppointmentId(Long appointmentId) {
        this.appointmentId = appointmentId;
    }

    public String getMedication() {
        return medication;
    }

    public void setMedication(String medication) {
        this.medication = medication;
    }

    public String getDosage() {
        return dosage;
    }

    public void setDosage(String dosage) {
        this.dosage = dosage;
    }

    public String getDoctorNotes() {
        return doctorNotes;
    }

    public void setDoctorNotes(String doctorNotes) {
        this.doctorNotes = doctorNotes;
    }

    @Override
    public String toString() {
        return "Prescription{" +
               "id='" + id + '\'' +
               ", patientName='" + patientName + '\'' +
               ", appointmentId=" + appointmentId +
               ", medication='" + medication + '\'' +
               ", dosage='" + dosage + '\'' +
               '}';
    }
}
